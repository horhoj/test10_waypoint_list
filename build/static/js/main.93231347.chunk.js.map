{"version":3,"sources":["components/MapViewer/MapViewer.module.scss","components/App/App.module.scss","store/hooks.ts","store/app/selectors.ts","config.ts","store/app/slice.ts","store/app/index.ts","components/WaypointList/Input/Input.tsx","components/WaypointList/WaypointList.tsx","components/MapViewer/helpers.ts","components/MapViewer/MapViewer.tsx","components/App/App.tsx","store/store.ts","index.tsx","components/WaypointList/WaypointList.module.scss"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","getWaypointIdList","state","app","waypointIdList","getWaypointsData","waypointsData","getCurrentMapCenter","currentMapCenter","DEFAULT_LOCATION","initialState","title","location","appSlice","createSlice","name","reducers","setCurrentMapCenter","action","payload","addWaypoint","currentMaxId","Math","max","newId","Number","isNaN","Infinity","push","deleteWaypoint","filter","id","editWaypointTitle","newTitle","editWaypointLocation","newWaypointLocation","dragWaypoint","oldIndex","newIndex","moved","splice","appSelectors","selectors","appActions","actions","appReducer","reducer","Input","onEnterNewValue","autoFocus","defaultValue","onCancel","className","dataTestId","useState","inputValue","setInputValue","conditionalProps","type","placeholder","value","onChange","e","target","onKeyDown","newWaypointTitle","trim","key","onBlur","WaypointList","editItemId","setEditItemId","dispatch","styles","wrap","inputAddWaypoint","waypointListHelper","onDragEnd","destination","source","destinationIndex","index","droppableId","direction","columnDroppableProvided","waypointList","droppableProps","ref","innerRef","map","waypointId","draggableId","toString","isDragDisabled","columnDraggableProvided","dragHandleProps","draggableProps","waypointItem","waypointItemTitle","inputEditWaypointTitle","newValue","inputEditWaypointTitleSpan","waypointItemLocation","toFixed","patchItemButton","onClick","deleteItemButton","getIconContent","coordinatesTextView","DEFAULT_MAP_STATE","center","zoom","MapViewer","handlePlaceMarkDragEnd","get","geometry","getCoordinates","polylineGeometry","forEach","mapWrapRef","useRef","width","setWidth","resize","useCallback","current","getBoundingClientRect","useEffect","window","addEventListener","removeEventListener","style","minHeight","helper","onActionEnd","centerCoordinates","originalEvent","getCenter","defaultState","height","WL","hint","options","draggable","preset","properties","iconContent","hintContent","balloonContentHeader","balloonContent","modules","balloonCloseButton","strokeColor","strokeWidth","strokeOpacity","App","store","configureStore","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93231347.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"MapViewer_wrap__YE6Rm\",\"helper\":\"MapViewer_helper__1qzpZ\",\"mapWrap\":\"MapViewer_mapWrap__2po7h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"App_wrap__2K2ND\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './types';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { RootState } from '../types';\nimport { WaypointIdList, WaypointsData } from '../../types';\n\nexport const getWaypointIdList = (state: RootState): WaypointIdList =>\n  state.app.waypointIdList;\n\nexport const getWaypointsData = (state: RootState): WaypointsData =>\n  state.app.waypointsData;\n\nexport const getCurrentMapCenter = (state: RootState): [number, number] =>\n  state.app.currentMapCenter;\n","import { WaypointIdList, WaypointLocation, WaypointsData } from './types';\n\nexport const DEFAULT_LOCATION: WaypointLocation = [55.75, 37.57];\n\nexport const DEFAULT_WAYPOINTS_DATA: WaypointsData = {\n  1: { title: 'Точка 1', location: [55.65, 37.17] },\n  2: { title: 'Точка 2', location: [55.55, 37.27] },\n  3: { title: 'Точка 3', location: [55.75, 37.37] },\n  4: { title: 'Точка 4', location: [55.76, 37.79] },\n};\n\nexport const DEFAULT_WAYPOINT_ID_LIST: WaypointIdList = [1, 2, 3, 4];\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WaypointIdList, WaypointLocation, WaypointsData } from '../../types';\nimport {\n  DEFAULT_LOCATION,\n  DEFAULT_WAYPOINT_ID_LIST,\n  DEFAULT_WAYPOINTS_DATA,\n} from '../../config';\n\ninterface AppState {\n  waypointIdList: WaypointIdList;\n  waypointsData: WaypointsData;\n  currentMapCenter: WaypointLocation;\n}\n\nconst initialState: AppState = {\n  waypointIdList: DEFAULT_WAYPOINT_ID_LIST,\n  waypointsData: DEFAULT_WAYPOINTS_DATA,\n  currentMapCenter: DEFAULT_LOCATION,\n};\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    setCurrentMapCenter: (state, action: PayloadAction<WaypointLocation>) => {\n      state.currentMapCenter = action.payload;\n    },\n\n    addWaypoint: (state, action: PayloadAction<string>) => {\n      const currentMaxId = Math.max(...state.waypointIdList);\n      let newId = 1;\n      // так как Math.max может возвращать странные значения типа -Infinity и NaN,\n      //то соответственно делаем проверку на эти значения\n      if (!Number.isNaN(currentMaxId) && !(currentMaxId === -Infinity)) {\n        newId = currentMaxId + 1;\n      }\n\n      state.currentMapCenter = [\n        state.currentMapCenter[0],\n        state.currentMapCenter[1] + 0.05,\n      ];\n\n      state.waypointsData[newId] = {\n        title: action.payload,\n        location: state.currentMapCenter,\n      };\n      state.waypointIdList.push(newId);\n    },\n\n    deleteWaypoint: (state, action: PayloadAction<number>) => {\n      state.waypointIdList = state.waypointIdList.filter(\n        (id) => id !== action.payload,\n      );\n      delete state.waypointsData[action.payload];\n    },\n\n    editWaypointTitle: (\n      state,\n      action: PayloadAction<{ id: number; newTitle: string }>,\n    ) => {\n      const { id, newTitle } = action.payload;\n      state.waypointsData[id] = { ...state.waypointsData[id], title: newTitle };\n    },\n\n    editWaypointLocation: (\n      state,\n      action: PayloadAction<{\n        id: number;\n        newWaypointLocation: WaypointLocation;\n      }>,\n    ) => {\n      const { id, newWaypointLocation } = action.payload;\n      state.waypointsData[id].location = newWaypointLocation;\n    },\n\n    dragWaypoint: (\n      state,\n      action: PayloadAction<{ oldIndex: number; newIndex: number }>,\n    ) => {\n      const { oldIndex, newIndex } = action.payload;\n      const moved = state.waypointIdList.splice(oldIndex, 1);\n      state.waypointIdList.splice(newIndex, 0, ...moved);\n    },\n  },\n});\n","import * as selectors from './selectors';\nimport { appSlice } from './slice';\n\nexport const appSelectors = selectors;\n\nexport const { actions: appActions, reducer: appReducer } = appSlice;\n","import { FC, KeyboardEvent, useState } from 'react';\n\ninterface InputProps {\n  onEnterNewValue(value: string): void;\n  autoFocus?: boolean;\n  defaultValue?: string;\n  onCancel?(): void;\n  className?: string;\n  dataTestId?: string;\n}\ninterface DynamicProps {\n  ['data-testid']?: string;\n}\n\nexport const Input: FC<InputProps> = ({\n  onEnterNewValue,\n  autoFocus = false,\n  defaultValue = '',\n  onCancel = null,\n  className = '',\n  dataTestId = '',\n}) => {\n  const [inputValue, setInputValue] = useState<string>(defaultValue);\n\n  //добавляем пропсы которые должны существовать только при некоторых условиях\n  const conditionalProps: DynamicProps = {};\n  if (dataTestId) {\n    conditionalProps['data-testid'] = dataTestId;\n  }\n\n  const handleInputKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    const newWaypointTitle = inputValue.trim();\n    //прерываем если нажат не клавиша Enter или введено пустое, или состоящее из пробелов значение\n    if (e.key !== 'Enter' || !newWaypointTitle) {\n      return;\n    }\n    onEnterNewValue(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <input\n      type=\"text\"\n      className={className}\n      placeholder={'введите новую точку'}\n      value={inputValue}\n      onChange={(e) => setInputValue(e.target.value)}\n      onKeyDown={handleInputKeyDown}\n      autoFocus={autoFocus}\n      onBlur={() => {\n        onCancel && onCancel();\n      }}\n      {...conditionalProps}\n    />\n  );\n};\n","import { FC, useState } from 'react';\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from 'react-beautiful-dnd';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { appActions, appSelectors } from '../../store/app';\nimport styles from './WaypointList.module.scss';\nimport { Input } from './Input';\n\nexport const WaypointList: FC = () => {\n  const [editItemId, setEditItemId] = useState<number | null>(null);\n  const waypointsData = useAppSelector(appSelectors.getWaypointsData);\n  const waypointIdList = useAppSelector(appSelectors.getWaypointIdList);\n  const dispatch = useAppDispatch();\n\n  const handleAddItem = (newWaypointTitle: string) => {\n    dispatch(appActions.addWaypoint(newWaypointTitle));\n  };\n\n  const handleDeleteItem = (id: number) => {\n    dispatch(appActions.deleteWaypoint(id));\n  };\n\n  const handlePatchItem = (id: number, newTitle: string) => {\n    dispatch(appActions.editWaypointTitle({ id, newTitle }));\n    setEditItemId(null);\n  };\n\n  const handleDragEnd = ({ destination, source }: DropResult) => {\n    const destinationIndex = destination?.index;\n    if (!(typeof destinationIndex === 'number')) {\n      return;\n    }\n\n    dispatch(\n      appActions.dragWaypoint({\n        oldIndex: source.index,\n        newIndex: destinationIndex,\n      }),\n    );\n  };\n\n  return (\n    <div className={styles.wrap}>\n      <div>\n        <Input\n          onEnterNewValue={handleAddItem}\n          className={styles.inputAddWaypoint}\n          dataTestId={'add_new_waypoint_title_input'}\n        />\n      </div>\n      <div className={styles.waypointListHelper}>\n        Перетащите для изменения порядка. Маршрут будет перестроен\n        автоматически.\n      </div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable\n          type=\"statusLane\"\n          droppableId={'waypoint-list-droppable'}\n          direction=\"vertical\"\n        >\n          {(columnDroppableProvided) => (\n            <ul\n              className={styles.waypointList}\n              {...columnDroppableProvided.droppableProps}\n              ref={columnDroppableProvided.innerRef}\n            >\n              {waypointIdList.map((waypointId, index) => (\n                <Draggable\n                  key={waypointId}\n                  draggableId={waypointId.toString()}\n                  index={index}\n                  isDragDisabled={editItemId !== null}\n                >\n                  {(columnDraggableProvided) => (\n                    <li\n                      key={waypointId}\n                      ref={columnDraggableProvided.innerRef}\n                      {...columnDraggableProvided.dragHandleProps}\n                      {...columnDraggableProvided.draggableProps}\n                      data-testid={`waypoint_item=${waypointId}`}\n                    >\n                      <span className={styles.waypointItem}>\n                        <span className={styles.waypointItemTitle}>\n                          {/*<span>{index + 1}.&nbsp;</span>*/}\n                          {editItemId === waypointId ? (\n                            <Input\n                              className={styles.inputEditWaypointTitle}\n                              autoFocus={true}\n                              defaultValue={waypointsData[waypointId].title}\n                              onEnterNewValue={(newValue) => {\n                                handlePatchItem(waypointId, newValue);\n                              }}\n                              onCancel={() => setEditItemId(null)}\n                            />\n                          ) : (\n                            <span className={styles.inputEditWaypointTitleSpan}>\n                              {waypointsData[waypointId].title}\n                            </span>\n                          )}\n                        </span>\n                        <span className={styles.waypointItemLocation}>\n                          [{waypointsData[waypointId].location[0].toFixed(2)}\n                          {', '}\n                          {waypointsData[waypointId].location[1].toFixed(2)}]\n                        </span>\n                        <button\n                          type={'button'}\n                          className={styles.patchItemButton}\n                          onClick={() => setEditItemId(waypointId)}\n                        >\n                          E\n                        </button>\n                        <button\n                          type={'button'}\n                          className={styles.deleteItemButton}\n                          onClick={() => handleDeleteItem(waypointId)}\n                          data-testid={`delete_waypoint_item_btn=${waypointId}`}\n                        >\n                          X\n                        </button>\n                      </span>\n                    </li>\n                  )}\n                </Draggable>\n              ))}\n              {columnDroppableProvided.placeholder}\n            </ul>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n","import { WaypointLocation, WaypointsData } from '../../types';\n\nexport const getHintContent = (hint: string): string =>\n  `<p style='font-size: 130%; padding: 5px'>${hint}</p>`;\n\nexport const getBalloonContent = (WL: WaypointLocation): string =>\n  `[${WL[0].toFixed(2)}, ${WL[1].toFixed(2)}]`;\n\nexport const getIconContent = (\n  waypointsData: WaypointsData,\n  coordinatesTextView: string,\n  waypointId: number,\n): string =>\n  `<p style=\"display: flex\">\n     <span \n        style=\"\n          font-weight: 500; \n          font-size: 110%; \n          overflow: hidden; \n          text-overflow: ellipsis; \n          max-width: 120px; \n          display: inline-block\"\n      >\n        ${waypointsData[waypointId].title}\n      </span>&nbsp;\n      <span>\n        ${coordinatesTextView}\n      </span>\n    </p>`;\n","import React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { YMaps, Map, Placemark, MapState, Polyline } from 'react-yandex-maps';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { appActions, appSelectors } from '../../store/app';\nimport { DEFAULT_LOCATION } from '../../config';\nimport { WaypointLocation } from '../../types';\nimport styles from './MapViewer.module.scss';\nimport { getBalloonContent, getHintContent, getIconContent } from './helpers';\n\nconst DEFAULT_MAP_STATE: MapState = {\n  center: DEFAULT_LOCATION,\n  zoom: 9,\n};\n\nconst MIN_MAP_WIDTH = 671;\n\nexport const MapViewer: FC = () => {\n  const dispatch = useAppDispatch();\n  const waypointIdList = useAppSelector(appSelectors.getWaypointIdList);\n  const waypointsData = useAppSelector(appSelectors.getWaypointsData);\n\n  const handlePlaceMarkDragEnd = (waypointId: number) => (e: any) => {\n    const newWaypointLocation: WaypointLocation = e\n      .get('target')\n      .geometry.getCoordinates();\n\n    const action = appActions.editWaypointLocation({\n      id: waypointId,\n      newWaypointLocation,\n    });\n\n    dispatch(action);\n  };\n\n  //получаем массив координат для построения ломаной\n  const polylineGeometry: WaypointLocation[] = [];\n  waypointIdList.forEach((waypointId) => {\n    polylineGeometry.push(waypointsData[waypointId].location);\n  });\n\n  //этот код нужен для адекватного выравнивания размеров карты\n  const mapWrapRef = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState<number>(MIN_MAP_WIDTH);\n  const resize = useCallback(() => {\n    if (mapWrapRef.current) {\n      const { width } = mapWrapRef.current.getBoundingClientRect();\n      setWidth(width);\n    }\n  }, []);\n\n  useEffect(() => {\n    resize();\n  }, [waypointIdList]);\n\n  useEffect(() => {\n    resize();\n    window.addEventListener('resize', resize);\n    return () => {\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  return (\n    <div className={styles.wrap} style={{ minHeight: `${width + 40}px` }}>\n      <div className={styles.helper}>метки на карте можно перетаскивать</div>\n      <YMaps>\n        <div ref={mapWrapRef}>\n          <Map\n            onActionEnd={(e: any) => {\n              const centerCoordinates: WaypointLocation =\n                e.originalEvent.map.getCenter();\n              dispatch(appActions.setCurrentMapCenter(centerCoordinates));\n            }}\n            defaultState={DEFAULT_MAP_STATE}\n            width={`${width}px`}\n            height={`${width}px`}\n          >\n            {waypointIdList.map((waypointId) => {\n              const coordinatesTextView = getBalloonContent(\n                waypointsData[waypointId].location,\n              );\n              return (\n                <Placemark\n                  key={waypointId}\n                  geometry={waypointsData[waypointId].location}\n                  options={{\n                    draggable: true,\n                    preset: 'islands#blueStretchyIcon',\n                  }}\n                  properties={{\n                    iconContent: getIconContent(\n                      waypointsData,\n                      coordinatesTextView,\n                      waypointId,\n                    ),\n                    hintContent: getHintContent(\n                      waypointsData[waypointId].title,\n                    ),\n                    balloonContentHeader: waypointsData[waypointId].title,\n                    balloonContent: coordinatesTextView,\n                  }}\n                  onDragEnd={handlePlaceMarkDragEnd(waypointId)}\n                  modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\n                />\n              );\n            })}\n            <Polyline\n              geometry={polylineGeometry}\n              options={{\n                balloonCloseButton: false,\n                strokeColor: '#090',\n                strokeWidth: 7,\n                strokeOpacity: 0.8,\n              }}\n            />\n          </Map>\n        </div>\n      </YMaps>\n    </div>\n  );\n};\n","import React from 'react';\nimport { WaypointList } from '../WaypointList';\nimport { MapViewer } from '../MapViewer';\nimport styles from './App.module.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div className={styles.wrap}>\n      <WaypointList />\n      <MapViewer />\n    </div>\n  );\n};\n","import { configureStore } from '@reduxjs/toolkit';\nimport { appReducer } from './app';\n\nexport const store = configureStore({\n  devTools: true,\n  reducer: {\n    app: appReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './components/App';\nimport './styles/globalStyles.scss';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"WaypointList_wrap__3Cqch\",\"waypointListHelper\":\"WaypointList_waypointListHelper__oZnXz\",\"waypointList\":\"WaypointList_waypointList__2f815\",\"inputAddWaypoint\":\"WaypointList_inputAddWaypoint__1LICh\",\"inputEditWaypointTitle\":\"WaypointList_inputEditWaypointTitle__dSepo\",\"inputEditWaypointTitleSpan\":\"WaypointList_inputEditWaypointTitleSpan__1A-j2\",\"waypointItem\":\"WaypointList_waypointItem__6ZAeo\",\"deleteItemButton\":\"WaypointList_deleteItemButton__2mCu8\",\"patchItemButton\":\"WaypointList_patchItemButton__1bS8i\",\"waypointItemTitle\":\"WaypointList_waypointItemTitle__ciCvn\",\"waypointItemLocation\":\"WaypointList_waypointItemLocation__1bdnk\"};"],"sourceRoot":""}